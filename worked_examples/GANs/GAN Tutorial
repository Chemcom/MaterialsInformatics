{"cells":[{"cell_type":"markdown","metadata":{"id":"lT63quvgri0L"},"source":["* This jupyter notebook lives in https://github.com/tomsercu/gan-tutorial-pytorch\n","* [Launch on Google Colab!](https://colab.research.google.com/github/tomsercu/gan-tutorial-pytorch/blob/master/2019-04-23%20GAN%20Tutorial.ipynb)\n","* This tutorial was presented at the [NYC AI & ML meetup](https://www.meetup.com/NYC-Artificial-Intelligence-Machine-Learning/events/260064765/) on April 23d 2019."]},{"cell_type":"markdown","metadata":{"id":"Tiet8mSu3abZ"},"source":["# Preliminaries"]},{"cell_type":"markdown","metadata":{"id":"EHUsMWXr3abc"},"source":["\n","We have the ambitious goal for this tutorial to be an introduction to both\n","* Generative Adversarial Networks (GANs) and\n","* deep learning with pytorch\n","\n","Since GANs are a more advanced topic in deep learning, we will introduce the deep learning concepts at an intuitive level in function of GANs, and focus on how they're implemented in pytorch.\n","We will translate GAN / deep learning concepts in code as soon as possible.\n","In the code we try to strip away complexity and abstractions, to make it easier to absorb the concepts.\n","The resulting code is minimalistic and very explicit, designed for learning, *not* for running real experiments.\n","\n","Here is what you will learn:\n","* GANs are generative models that learn to generate data, based on a min-max/adversarial game between a Generator (G) and Discriminator (D).\n","* The parameters of both Generator and Discriminator are optimized with Stochastic Gradient Descent (SGD), for which the gradients of a loss function with respect to the neural network parameters are easily computed with pytorch's autograd. This is at the core of deep learning.\n","* How these concepts translate into pytorch code for GAN optimization.\n","\n","Overview of the tutorial:\n","1. GAN intro\n","2. Defining the neural networks in pytorch, computing a forward pass\n","3. Optimization with SGD - linear regression example\n","4. Training our GAN"]},{"cell_type":"markdown","metadata":{"id":"BigKSsdp3abd"},"source":["# Some cool demos:\n","* Progress over the last 5 years, from [Ian Goodfellow tweet](https://twitter.com/goodfellow_ian/status/1084973596236144640)\n","\n","![tweet image](https://github.com/tomsercu/gan-tutorial-pytorch/blob/master/figs/goodfellow_tweet.jpg?raw=1)\n","\n","* CycleGAN translating horses into zebras: https://www.youtube.com/watch?v=9reHvktowLY\n","* CycleGAN teaser: ![cyclegan teaser image](https://github.com/tomsercu/gan-tutorial-pytorch/blob/master/figs/cyclegan_teaser_high_res.jpg?raw=1)\n","* High resolution faces with StyleGAN https://www.youtube.com/watch?v=kSLJriaOumA\n","* https://ganbreeder.app web-interface to create images based on [BigGan](https://arxiv.org/abs/1809.11096)\n"]},{"cell_type":"markdown","metadata":{"id":"fRlUvNOI3abf"},"source":["# 1. GAN first introduction\n","[GAN picture](figs/gan_xavigiro.png)\n","\n","<img src=\"https://github.com/tomsercu/gan-tutorial-pytorch/blob/master/figs/gan_xavigiro.png?raw=1\" alt=\"GAN picture\" style=\"width: 700px;\"/>\n","\n","GANs are a class of unsupervised generative models which implicitly model the data density.\n","\n","The basic setup is pictured above. There are two \"competing\" neural networks:\n","* The Generator wants to learn to generate realistic images that are indistinguishable from the real data.\n","    - *input*: Gaussian noise random sample. *output*: a (higher dimensional) datapoint\n","* The Discriminator wants to tell the real & fake images apart.\n","    - *input*: datapoint/image, *output*: probability assigned to datapoint being real. Think binary classifier.\n","* The typical analogy: the generator is like a counterfeiter trying to look like real, the discriminator is the police trying to tell counterfeits from the real work.\n","* The key novelty of GANs is to pass the error signal (gradients) from the discriminator to the generator: the generator neural network uses the information from the competing discriminator neural network to know how to produce more realistic output."]},{"cell_type":"markdown","metadata":{"id":"0zwKErIf3abg"},"source":["Let's start with defining the generator G and discriminator D in pytorch."]},{"cell_type":"markdown","metadata":{"id":"P51qRT7k3abg"},"source":["# 2. Define the neural networks in pytorch"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"fHza7chYecM4","executionInfo":{"status":"ok","timestamp":1750988449651,"user_tz":420,"elapsed":17,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":["# if running on colab, pytorch is already installed.\n","# if running locally, conda or pip install this in your conda environment:\n","# conda install pytorch torchvision -c pytorch\n","# OR\n","# pip3 install torch torchvision\n","# I'll be assuming python >=3.6 and torch 1.0.1 which currently are the colab defaults."]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ropMkTLTiWos","outputId":"f687186f-b685-4bcf-d2e2-ad9c24405699","executionInfo":{"status":"ok","timestamp":1750988466154,"user_tz":420,"elapsed":16500,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["3.11.13 (main, Jun  4 2025, 08:57:29) [GCC 11.4.0]\n","2.6.0+cu124\n"]}],"source":["import sys\n","print(sys.version) # python 3.6\n","import torch\n","import torch.nn as nn\n","import torchvision.datasets\n","import torchvision.transforms as transforms\n","import torch.nn.functional as F\n","import torchvision.utils as vutils\n","print(torch.__version__) # 1.0.1\n","\n","%matplotlib inline\n","import matplotlib.pyplot as plt\n","\n","def show_imgs(x, new_fig=True):\n","    grid = vutils.make_grid(x.detach().cpu(), nrow=8, normalize=True, pad_value=0.3)\n","    grid = grid.transpose(0,2).transpose(0,1) # channels as last dimension\n","    if new_fig:\n","        plt.figure()\n","    plt.imshow(grid.numpy())"]},{"cell_type":"markdown","metadata":{"id":"zgfEx8YN0BDF"},"source":["## torch basics"]},{"cell_type":"markdown","metadata":{"id":"uEk69i7F3abo"},"source":["PyTorch is a package that defines vectors, matrices, or in general \"tensors\". If you know numpy, you will not be surprised by any of these:"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UmvFvWHJ0GQ1","executionInfo":{"status":"ok","timestamp":1750988466193,"user_tz":420,"elapsed":27,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"8f7ecb7d-b273-4a38-e720-a5a6e48790cf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[1., 1., 1.],\n","        [1., 1., 1.],\n","        [1., 1., 1.]])"]},"metadata":{},"execution_count":3}],"source":["a = torch.ones(3,3)\n","a"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mur2vsHp0GmX","executionInfo":{"status":"ok","timestamp":1750988466199,"user_tz":420,"elapsed":5,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"61479709-9c15-463d-b53b-0b31f68d9565"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0., 1., 2.],\n","        [3., 4., 5.],\n","        [6., 7., 8.]])"]},"metadata":{},"execution_count":4}],"source":["b = torch.arange(9).float().view(3,3)\n","b"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_hQiSHvW0G2v","executionInfo":{"status":"ok","timestamp":1750988466208,"user_tz":420,"elapsed":7,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"6e0e802b-df2b-41c3-bc2c-8b47df28653e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[ 1.,  4.,  9.],\n","        [16., 25., 36.],\n","        [49., 64., 81.]])"]},"metadata":{},"execution_count":5}],"source":["(a+b)**2"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"7ZZPD_eJ3abq","executionInfo":{"status":"ok","timestamp":1750988466235,"user_tz":420,"elapsed":9,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"25fa8ad5-46ad-429e-b583-0b400936c883","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0., 3., 6.])"]},"metadata":{},"execution_count":6}],"source":["b[:,0]"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"4Bi1wbu03abq","executionInfo":{"status":"ok","timestamp":1750988466260,"user_tz":420,"elapsed":23,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"52d78d17-cc1d-4883-eada-1aa43deb8eed","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0., 0., 0.],\n","        [0., 0., 0.],\n","        [0., 0., 0.]])"]},"metadata":{},"execution_count":7}],"source":["a.zero_() # operations with an underscore modify the Tensor in place.\n","a"]},{"cell_type":"markdown","metadata":{"id":"2OnrV7Gt3abr"},"source":["You can slice and dice tensors and they have roughly all tensor operations you expect equivalently to numpy, but with a bit more low level control. If you need more intro: https://pytorch.org/tutorials/beginner/blitz/tensor_tutorial.html#sphx-glr-beginner-blitz-tensor-tutorial-py\n","\n","So what's the big deal about pytorch?\n","\n","**autograd = automatic differentiation** which allows to compute derivatives of a computation sequence (graph) automatically. More about this later."]},{"cell_type":"markdown","metadata":{"id":"TjWX4IDG3abr"},"source":["## Defining the neural networks"]},{"cell_type":"markdown","metadata":{"id":"5VThreMH3abr"},"source":["Let's define a small 2-layer fully connected neural network (so one hidden layer) for the discriminator `D`:"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"GuKBu21O3abs","executionInfo":{"status":"ok","timestamp":1750988466264,"user_tz":420,"elapsed":2,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":["class Discriminator(torch.nn.Module):\n","    def __init__(self, inp_dim=784):\n","        super(Discriminator, self).__init__()\n","        self.fc1 = nn.Linear(inp_dim, 128)\n","        self.nonlin1 = nn.LeakyReLU(0.2)\n","        self.fc2 = nn.Linear(128, 1)\n","    def forward(self, x):\n","        x = x.view(x.size(0), 784) # flatten (bs x 1 x 28 x 28) -> (bs x 784)\n","        h = self.nonlin1(self.fc1(x))\n","        out = self.fc2(h)\n","        out = torch.sigmoid(out)\n","        return out"]},{"cell_type":"markdown","metadata":{"id":"R4B9G5723abt"},"source":["And a small 2-layer neural network for the generator `G`. `G` takes a 100-dimensional noise vector and generates an output of the size matching the data."]},{"cell_type":"code","execution_count":9,"metadata":{"id":"m22k1V6l3abt","executionInfo":{"status":"ok","timestamp":1750988466375,"user_tz":420,"elapsed":110,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":["class Generator(nn.Module):\n","    def __init__(self, z_dim=100):\n","        super(Generator, self).__init__()\n","        self.fc1 = nn.Linear(z_dim, 128)\n","        self.nonlin1 = nn.LeakyReLU(0.2)\n","        self.fc2 = nn.Linear(128, 784)\n","    def forward(self, x):\n","        h = self.nonlin1(self.fc1(x))\n","        out = self.fc2(h)\n","        out = torch.tanh(out) # range [-1, 1]\n","        # convert to image\n","        out = out.view(out.size(0), 1, 28, 28)\n","        return out\n"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"3sgV-URd3abt","executionInfo":{"status":"ok","timestamp":1750988466376,"user_tz":420,"elapsed":20,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"e1aa349d-15ad-4c49-d34f-22f98e113d3c","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Discriminator(\n","  (fc1): Linear(in_features=784, out_features=128, bias=True)\n","  (nonlin1): LeakyReLU(negative_slope=0.2)\n","  (fc2): Linear(in_features=128, out_features=1, bias=True)\n",")\n","Generator(\n","  (fc1): Linear(in_features=100, out_features=128, bias=True)\n","  (nonlin1): LeakyReLU(negative_slope=0.2)\n","  (fc2): Linear(in_features=128, out_features=784, bias=True)\n",")\n"]}],"source":["# instantiate a Generator and Discriminator according to their class definition.\n","D = Discriminator()\n","print(D)\n","G = Generator()\n","print(G)"]},{"cell_type":"markdown","metadata":{"id":"oNtXwiFb3abu"},"source":["Note that the dimensions of D input and G output were defined for MNIST data."]},{"cell_type":"markdown","metadata":{"id":"g0qGDFFC3abu"},"source":["## Testing the neural networks (forward pass)"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"flysZ-7k3abv","executionInfo":{"status":"ok","timestamp":1750988466377,"user_tz":420,"elapsed":8,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"dcf7891c-3cdb-4220-fef9-8be3bb51e732","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0.5042],\n","        [0.5084],\n","        [0.4862],\n","        [0.4979],\n","        [0.4099]], grad_fn=<SigmoidBackward0>)"]},"metadata":{},"execution_count":11}],"source":["# A small batch of 3 samples, all zeros.\n","samples = torch.randn(5, 1, 28, 28) # batch size x channels x width x height\n","# This is how to do a forward pass (calls the .forward() function under the hood)\n","D(samples)"]},{"cell_type":"markdown","metadata":{"id":"P1Yh6XdH3abv"},"source":["Things to try:\n","* What happens if you change the number of samples in a batch?\n","* What happens if you change the width/height of the input?\n","* What are the weights of the discriminator? You can get an iterator over them with `.parameters()` and `.named_parameters()`"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"tkaPPM9V3abv","executionInfo":{"status":"ok","timestamp":1750988466501,"user_tz":420,"elapsed":124,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"48a76f0b-090d-4e8a-e266-930b183f2028","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["fc1.weight torch.Size([128, 784])\n","fc1.bias torch.Size([128])\n","fc2.weight torch.Size([1, 128])\n","fc2.bias torch.Size([1])\n"]}],"source":["for name, p in D.named_parameters():\n","    print(name, p.shape)"]},{"cell_type":"markdown","metadata":{"id":"66mlQSjI3abw"},"source":["We will think of the concatentation of all these discriminator weights in one big vector as $\\theta_D$.\n","\n","Similarly we name the concatentation of all the generator weights in one big vector $\\theta_G$."]},{"cell_type":"code","execution_count":13,"metadata":{"id":"rA7Sj4tL3abw","executionInfo":{"status":"ok","timestamp":1750988466503,"user_tz":420,"elapsed":28,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"4519c255-6fc8-4711-c859-125acce35ee3","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["fc1.weight torch.Size([128, 100])\n","fc1.bias torch.Size([128])\n","fc2.weight torch.Size([784, 128])\n","fc2.bias torch.Size([784])\n"]}],"source":["for name, p in G.named_parameters():\n","    print(name, p.shape)"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"V14DWCnM3abw","executionInfo":{"status":"ok","timestamp":1750988466503,"user_tz":420,"elapsed":8,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"d7c787f2-a12f-4821-8c2f-405201d5a049","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([ 1.6441,  2.4196, -0.3977,  1.0895, -2.9829,  0.5606, -1.2614,  2.5122,\n","        -1.3068,  0.0275, -0.7738,  0.6218,  1.7987, -1.9757, -1.2302, -0.6809,\n","        -1.2162,  0.4372,  0.1175,  0.2977,  1.4686,  2.0595, -1.9972, -0.8956,\n","        -0.4010,  1.5544, -2.8865,  0.5400,  0.6413,  1.0074,  2.2705, -1.2322,\n","        -0.3120, -0.2232, -1.8328, -1.2992,  0.7221, -0.8516,  2.3790, -0.3984,\n","        -0.2964, -1.2305,  0.5630,  0.9147,  1.1318,  0.7763, -0.3068,  0.2230,\n","        -0.4604,  1.8703,  1.4030, -0.6236,  0.1732, -0.4493, -0.3417,  0.2505,\n","         0.5050, -0.1246, -0.1213,  0.3762, -1.7590,  0.1900, -1.3998,  1.2721,\n","        -0.0185,  0.9780,  0.9832, -1.8913,  0.7502,  0.2599, -0.7401, -0.9851,\n","         0.7230,  0.1347, -0.7014, -0.9050,  2.5930,  0.7092,  0.5540,  0.2516,\n","         0.6371, -1.0920, -0.2944,  2.1757, -0.1744, -0.6606,  0.1446,  0.6881,\n","         1.3409,  1.2632,  1.0909,  0.6901,  0.8983, -0.4748,  1.4338, -0.7599,\n","        -1.1878,  0.2614, -0.3813,  0.6262])\n"]},{"output_type":"execute_result","data":{"text/plain":["torch.Size([2, 1, 28, 28])"]},"metadata":{},"execution_count":14}],"source":["# A small batch of 2 samples, random noise.\n","z = torch.randn(2, 100)\n","print(z[0])\n","# This is how to do a forward pass (calls the .forward() function under the hood)\n","x_gen = G(z)\n","x_gen.shape"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"KBEjm5Bh3abw","executionInfo":{"status":"ok","timestamp":1750988466563,"user_tz":420,"elapsed":63,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"3b3e4365-79c6-4387-e4e6-f3f31b57a0d1","colab":{"base_uri":"https://localhost:8080/","height":318}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["z = torch.randn(2, 100)\n","show_imgs(G(z))"]},{"cell_type":"markdown","metadata":{"id":"ZTnvvNFJ3abx"},"source":["## Loading the data and computing forward pass"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PH8zthzBhjKS","outputId":"5c386828-e0bd-4de9-b3f2-d620550c2d90","executionInfo":{"status":"ok","timestamp":1750988475886,"user_tz":420,"elapsed":9325,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 26.4M/26.4M [00:02<00:00, 9.21MB/s]\n","100%|██████████| 29.5k/29.5k [00:00<00:00, 139kB/s]\n","100%|██████████| 4.42M/4.42M [00:01<00:00, 2.50MB/s]\n","100%|██████████| 5.15k/5.15k [00:00<00:00, 10.5MB/s]\n"]}],"source":["# let's download the Fashion MNIST data, if you do this locally and you downloaded before,\n","# you can change data paths to point to your existing files\n","# dataset = torchvision.datasets.MNIST(root='./MNISTdata', ...)\n","dataset = torchvision.datasets.FashionMNIST(root='./FashionMNIST/',\n","                       transform=transforms.Compose([transforms.ToTensor(),\n","                                                     transforms.Normalize((0.5,), (0.5,))]),\n","                       download=True)\n","dataloader = torch.utils.data.DataLoader(dataset, batch_size=64, shuffle=True)"]},{"cell_type":"markdown","metadata":{"id":"CNjVlTt87ou1"},"source":["Dataset and DataLoader are abstractions to help us iterate over the data in random order."]},{"cell_type":"markdown","metadata":{"id":"Uwi2hTFK3aby"},"source":["Let's look at a sample:"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"hDzVq4hi3aby","executionInfo":{"status":"ok","timestamp":1750988476259,"user_tz":420,"elapsed":370,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"86e51a61-4c2a-4f3b-da8c-a01c3d338226","colab":{"base_uri":"https://localhost:8080/","height":434}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.colorbar.Colorbar at 0x7b0a79457d90>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 480x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["ix=149\n","x, _ = dataset[ix]\n","plt.matshow(x.squeeze().numpy(), cmap=plt.cm.gray)\n","plt.colorbar()"]},{"cell_type":"markdown","metadata":{"id":"41ifSBos3aby"},"source":["Feed the image into the discriminator; the output will be the probability the (untrained) discriminator assigns to this sample being real."]},{"cell_type":"code","execution_count":18,"metadata":{"id":"Pb0ae6KP3abz","executionInfo":{"status":"ok","timestamp":1750988476277,"user_tz":420,"elapsed":14,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"07ab6425-e2f1-4695-ed76-d75139f8df72","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0.4891]], grad_fn=<SigmoidBackward0>)"]},"metadata":{},"execution_count":18}],"source":["# for one image:\n","Dscore = D(x)\n","Dscore"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"jrP__CcG3ab7","executionInfo":{"status":"ok","timestamp":1750988476299,"user_tz":420,"elapsed":19,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"f7a9bd7a-7c3c-4686-b5cb-3ab397abc1ed","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([64, 1, 28, 28])\n","torch.Size([64, 1])\n"]}],"source":["# How you can get a batch of images from the dataloader:\n","xbatch, _ = next(iter(dataloader)) # 64 x 1 x 28 x 28: minibatch of 64 samples\n","print(xbatch.shape)  # Should print: torch.Size([64, 1, 28, 28])\n","output = D(xbatch)   # 64x1 tensor: 64 predictions of probability of input being real\n","print(output.shape)  # Should print: torch.Size([64, 1])"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"DXzfe4C73ab8","colab":{"base_uri":"https://localhost:8080/","height":435},"executionInfo":{"status":"ok","timestamp":1750988476588,"user_tz":420,"elapsed":294,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"843481d4-9693-47e9-e38f-f234022f6a12"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["show_imgs(xbatch)"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"5vQei7Rz3ab8","executionInfo":{"status":"ok","timestamp":1750988476588,"user_tz":420,"elapsed":4,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]},{"cell_type":"code","execution_count":20,"metadata":{"id":"sSqM6_sZ3ab8","executionInfo":{"status":"ok","timestamp":1750988476590,"user_tz":420,"elapsed":5,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"r_4UHnGD3ab9"},"source":["# 3 Intermezzo: optimization with SGD - linear regression example"]},{"cell_type":"markdown","metadata":{"id":"QhBaAx2B3ab9"},"source":["We will step away from GANs for a second to introduce the core of deep learning: optimization with SGD.\n","\n","Here are the core components of a basic deep learning classifier/regression setup:\n","* a neural network $\\hat{y}=f(x, \\theta)$, which takes an input $x$ and parameters $\\theta$, and outputs $\\hat{y}$, a prediction of label $y$.\n","* a loss function $\\mathcal{L}(\\theta) = \\mathbb{E}_{x,y \\sim p_d} \\ell(f(x, \\theta), y) \\approx \\sum_{x_i,y_i \\sim mb} \\ell(f(x_i, \\theta), y_i)$.\n","* optimizing $\\theta$ to reduce the loss, by making small updates to $\\theta$ in the direction of $-\\nabla_\\theta \\mathcal{L}(\\theta)$.\n","\n","pytorch is designed around these core components:\n","* The way to define a neural network is with `torch.nn.Module`, see how we defined the Discriminator and Generator above.\n","    - a `Module` defines (1) its weights and (2) defines the operations done with them.\n","    - initializing a module initializes the weights at random\n","* $\\theta$ stands for all our neural network weights (everything you get from `.parameters()`)\n","* In the optimization loop you will evaluate a \"minibatch\" of samples (in our case 64) to compute the neural network output, and the loss measuring how far away those predictions are from the truth.\n","* To compute the gradient $\\nabla_\\theta \\mathcal{L}(\\theta)$, you call `.backward()` on the loss. This is where the magic happens: the gradient wrt all weights in the neural network is computed. They appear in a new Tensor `p.grad` for each `p in net.parameters()`\n","    - under the hood, this happens by keeping track of the computational graph, and reversing the computation order to \"backpropagate\" the loss with the chain rule.\n","    - [Figure which shows a bit more detail](https://tom.sercu.me/assets/201812CCNY/NN_fig.pdf)"]},{"cell_type":"markdown","metadata":{"id":"a_Lh0ccK3ab9"},"source":["A side note about optimization:\n","- optimization through small consecutive steps along the gradient $-\\nabla_\\theta \\mathcal{L}(\\theta)$ is called gradient descent, the stochastic version is stochastic gradient descent (SGD).\n","- (S)GD is probably the simplest optimization algorithm, you can do much more complex things like combining gradients along multiple timesteps, take curvature information into account, etc.\n","- in deep learning, SGD and (adaptive learning rate) variations like Adam are the workhorse.\n","- [This distill.pub article](https://distill.pub/2017/momentum/) has nice visualizations and analysis of SGD with momentum."]},{"cell_type":"markdown","metadata":{"id":"xNQCS0sF3ab-"},"source":["### 3a: basic autograd example\n","\n","So we said the big deal about pytorch (or other deep learning package) is **autograd = automatic differentiation** which allows to compute derivatives automatically.\n","\n","Every `torch.Tensor`, let's say `x`, has an important flag `requires_grad`. If this flag is set to True, pytorch will keep track of the graph of operations that happen with this tensor.\n","When we finally arrive at some output (a scalar variable based on a sequence of operations on `x`), we can call `.backward()` on this output, to compute the gradient `d(output) / dx`. This gradient will end up in `x.grad`."]},{"cell_type":"code","execution_count":21,"metadata":{"id":"wJR81mKk3ab-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476614,"user_tz":420,"elapsed":24,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"d5b59c1c-a9e2-446d-d359-1d3d981ea161"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[-0.9256,  0.2491],\n","        [-1.5657, -0.2500]], requires_grad=True)"]},"metadata":{},"execution_count":21}],"source":["x = torch.randn(2,2, requires_grad=True)\n","x"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"dnn_bkXY3ab-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476621,"user_tz":420,"elapsed":6,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"bde33f8a-bdb5-44d2-da16-f115ac0bebd9"},"outputs":[{"output_type":"stream","name":"stdout","text":["None\n"]}],"source":["# no gradient yet at this point:\n","print(x.grad)"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"isSh4uCs3ab-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476645,"user_tz":420,"elapsed":23,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"1af65657-56ce-4792-857b-1fe23a1dc170"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(0.9406, grad_fn=<SumBackward0>)"]},"metadata":{},"execution_count":23}],"source":["y=(x**2 + x)\n","z = y.sum()\n","z"]},{"cell_type":"markdown","metadata":{"id":"w5X8o2RO3ab_"},"source":["We know from high school math that the derivative `dz / dx[i,j]` = 2*x[i,j] +1"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"zSFQe-Gc3ab_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476653,"user_tz":420,"elapsed":7,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"7a848cce-f580-46ab-972a-9259de94fe02"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[-0.8513,  1.4982],\n","        [-2.1315,  0.5001]])"]},"metadata":{},"execution_count":24}],"source":["z.backward()\n","x.grad"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"ocEpOTTb3ab_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476660,"user_tz":420,"elapsed":5,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"006401e0-ddab-4b36-fd4e-ca1351f6dddf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[-0.8513,  1.4982],\n","        [-2.1315,  0.5001]], grad_fn=<AddBackward0>)"]},"metadata":{},"execution_count":25}],"source":["2*x+1"]},{"cell_type":"markdown","metadata":{"id":"5AEf51F93acA"},"source":["You can play with this: you can introduce any tensor operation here; for example `torch.exp(torch.sin(x**2))`. Confirm that the gradient matches the analytical derivative."]},{"cell_type":"markdown","metadata":{"id":"otWAoJih3acA"},"source":["More about autograd in the tutorial https://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html#sphx-glr-beginner-blitz-autograd-tutorial-py and the docs https://pytorch.org/docs/stable/autograd.html\n","\n","\n","This was a very basic example of what pytorch autograd does for us: computing the derivatives of a scalar function $z(x)$ wrt $x$: $\\nabla_x z(x)$.\n","In a deep learning context this will be at the basis of our optimization; now we will have\n","* $\\mathcal{L}(\\theta)$  the loss is a (scalar) function of neural network parameters (vector) $\\theta$.\n","* autograd will allow us to call `.backward()` on the loss, which will compute the gradient of the loss with respect to neural network parameters $\\nabla_\\theta \\mathcal{L}(\\theta)$.\n","* For each of the parameters `p` the gradient will be in `p.grad`\n","* Can you confirm that for the parameters of G/D, the flag `.requires_grad` is `True`?"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"dpSVosXi3acA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476666,"user_tz":420,"elapsed":5,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"387d60c8-06d3-41d8-fee6-0b142ab2eb26"},"outputs":[{"output_type":"stream","name":"stdout","text":["None\n","None\n","None\n","None\n"]}],"source":["for p in G.parameters():\n","    print(p.grad)"]},{"cell_type":"markdown","metadata":{"id":"z5Q9O3Ok3acB"},"source":["### 3b: Linear regression"]},{"cell_type":"markdown","metadata":{"id":"z9vrSzuk3acB"},"source":["Let's try this for a simple linear mapping `y = f(x, theta) = <x, theta>` with $x, \\theta \\in \\mathbb{R}^{2}$. We we want to optimize $\\theta$:"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"PDAO1vGl3acC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476673,"user_tz":420,"elapsed":6,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"83fae242-41aa-48e8-9cd3-a47461542e6c"},"outputs":[{"output_type":"stream","name":"stdout","text":["x:\n"," tensor([[ 1.0000, -1.0593],\n","        [ 2.0000,  1.2427],\n","        [ 3.0000, -0.5301],\n","        [-3.0000, -0.8405],\n","        [-2.0000, -1.6378]])\n","y:\n"," tensor([[ 3.],\n","        [ 6.],\n","        [ 9.],\n","        [-9.],\n","        [-6.]])\n","theta at random initialization:  Parameter containing:\n","tensor([[ 0.4849, -0.3917]], requires_grad=True)\n"]}],"source":["torch.manual_seed(23231)\n","x1 = torch.Tensor([1, 2, 3, -3, -2])\n","y = torch.Tensor ([3, 6, 9, -9, -6]).view(5,1)\n","x2 = torch.randn(5)\n","x = torch.stack([x1, x2], dim=1) # 5 x 2 input. 5 datapoints, 2 dimensions.\n","# theta = torch.randn(1,2, requires_grad=True) # ~equal to:\n","theta = torch.nn.Parameter(torch.randn(1,2))\n","# we start theta at random initialization, the gradient will point us in the right direction.\n","print('x:\\n', x)\n","print('y:\\n', y)\n","print('theta at random initialization: ', theta)\n","thetatrace = [theta.data.clone()] # initial value, for logging"]},{"cell_type":"markdown","metadata":{"id":"ENJSXJCO3acD"},"source":["Take a look at x and y. What is their correct (linear) relationship?\n","\n","A: `y = 3 x1 + 0 x2`"]},{"cell_type":"markdown","metadata":{"id":"8-nbb9wC3acD"},"source":["Now we define a prediction as a linear mapping $\\hat{y} = (X . \\theta)$\n","\n","We will compute the ordinary least squares objective (mean squared error):  $\\mathcal{L}(\\theta) = (\\hat{y}(x,\\theta) - y)^2$\n","\n","Compute $\\nabla_\\theta \\mathcal{L}(\\theta)$, and\n","\n","Move $\\theta$ a small step opposite to that direction"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"1D2vaoN23acE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476680,"user_tz":420,"elapsed":6,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"4538c50d-6682-4480-9e04-fc188c3d3d88"},"outputs":[{"output_type":"stream","name":"stdout","text":["ypred:\n"," tensor([[ 0.8998],\n","        [ 0.4830],\n","        [ 1.6623],\n","        [-1.1254],\n","        [-0.3282]], grad_fn=<MmBackward0>)\n","mse loss:  36.57358169555664\n","dL / d theta:\n"," tensor([[-28.0458,  -6.6600]])\n","theta:\n"," Parameter containing:\n","tensor([[3.2895, 0.2743]], requires_grad=True)\n"]}],"source":["ypred = x @ theta.t() # matrix multiply; (N x 2) * (2 x 1) -> N x 1\n","print('ypred:\\n', ypred)\n","loss = ((ypred-y)**2).mean() # mean squared error = MSE\n","print('mse loss: ', loss.item())\n","loss.backward()\n","print('dL / d theta:\\n', theta.grad)\n","# let's move W in that direction\n","theta.data.add_(-0.1 * theta.grad.data)\n","# Now we will reset the gradient to zero.\n","theta.grad.zero_()\n","print('theta:\\n', theta)\n","thetatrace.append(theta.data.clone()) # for logging"]},{"cell_type":"markdown","metadata":{"id":"eaRF9vtx3acF"},"source":["You can re-execute this cell above a couple of times and see how $\\theta$ goes close towards the optimal value of `[3,0]`."]},{"cell_type":"code","execution_count":29,"metadata":{"id":"nYzok7yQ3acF","colab":{"base_uri":"https://localhost:8080/","height":468},"executionInfo":{"status":"ok","timestamp":1750988476716,"user_tz":420,"elapsed":35,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"a44d5afc-350e-4b83-cd36-4cdf7d9f153c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'theta[1]')"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Now let us plot in 2D what happened to theta during SGD optimization. In red is the true relation.\n","thetas = torch.cat(thetatrace, dim=0).numpy()\n","plt.figure()\n","plt.plot(thetas[:,0], thetas[:, 1], 'x-')\n","plt.plot(3, 0, 'ro')\n","plt.xlabel('theta[0]')\n","plt.ylabel('theta[1]')"]},{"cell_type":"markdown","metadata":{"id":"w00A5MF07pIw"},"source":["Ok, doing this manually gives you insight what happens down to the details. But usually we do not do the gradient updates manually, it would become very cumbersome if the net becomes more complex than the simple linear layer. pytorch gives us abstractions to easily manage this complexity:\n","* `nn.Linear()` (or generally  `Module`s) which do two things: (a) they contain the learnable weight, and (b) define how they operate on an input tensor to give an output.\n","* `module.zero_grad()` to clear the gradients,\n","* `optim.SGD` with which you can do `optimizer.step()` to do a step of SGD."]},{"cell_type":"code","execution_count":30,"metadata":{"id":"Lqf1jzKK3acG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476725,"user_tz":420,"elapsed":11,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"64f68cbf-283d-4344-a9ad-c543cf6c0c54"},"outputs":[{"output_type":"stream","name":"stdout","text":["Parameter containing:\n","tensor([[3.0000e+00, 1.0507e-07]], requires_grad=True)\n"]}],"source":["torch.manual_seed(23801)\n","net = nn.Linear(2,1, bias=False)\n","optimizer = torch.optim.SGD(net.parameters(), lr=0.1) # do updates with `optimizer.step()`\n","# x, y defined above. In a real problem we would typically get different x, y \"minibatches\"\n","# of samples from a dataloader.\n","for i in range(100): # 10 optimization steps (gradient descent steps)\n","    ypred = net(x)\n","    loss = ((ypred-y)**2).mean() # mean squared error = MSE\n","    optimizer.zero_grad()\n","    loss.backward()\n","    # and instead of W.data -= 0.1 * W.grad we do:\n","    optimizer.step()\n","print(net.weight)"]},{"cell_type":"markdown","metadata":{"id":"E1kA_8FB3acG"},"source":["Indeed this is very close to the optimal $\\theta=[3,0]$."]},{"cell_type":"code","execution_count":30,"metadata":{"id":"Y15Ailye3acH","executionInfo":{"status":"ok","timestamp":1750988476728,"user_tz":420,"elapsed":3,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"O3FOf0Yx3acH"},"source":["# 4. Back to GANs: The min-max game."]},{"cell_type":"markdown","metadata":{"id":"hrHvDT4-3acI"},"source":["We introduced and defined the generator G, the discriminator D, and the dataloader which will give us minibatches of real data. With the intermezzo on optimization we also understand how we optimize neural networks in pytorch.\n","\n","To recap the basic idea of the min-max / adversarial game:\n","* The Generator and Discriminator have competing objectives, they are \"adversaries\".\n","* The Discriminator wants to assign high probability to real images and low probability to generated (fake) images\n","* The Generator wants its generated images to look real, so wants to modify its outputs to get high scores from the Discriminator\n","* We will optimize both alternatingly, with SGD steps (as before): optimize $\\theta_D$ the weights of $D(x, \\theta_D)$, and  $\\theta_G$ the weights of $G(z, \\theta_G)$.\n","* Final goal of the whole min-max game is for the Generator to match the data distribution: $p_G(x) \\approx p_{data}(x)$.\n","\n","\n","Now what are the objective functions for each of them? As mentioned in the introduction, the objective for the discriminator is to classify the real images as real, so $D(x) = 1$, and the fake images as fake, so $D(G(z))=0$.\n","This is a typical binary classification problem which calls for the binary cross-entropy (BCE) loss, which encourages exactly this solution.\n","\n","For G we just try to minimize the same loss that D maximizes. See how G appears inside D? This shows how the output of the generator G is passed into the Discriminator to compute the loss.\n","\n","\n","This is the optimization problem:\n","\n","$$\n","\\min _{G} \\max _{D} V(D, G)=\\mathbb{E}_{\\boldsymbol{x} \\sim p_{\\text { data }}(\\boldsymbol{x})}[\\log D(\\boldsymbol{x})]+\\mathbb{E}_{\\boldsymbol{z} \\sim p_{\\boldsymbol{z}}(\\boldsymbol{z})}[\\log (1-D(G(\\boldsymbol{z})))]\n","$$\n","\n","We will do a single SGD step alternatingly to maximize D, then minimize G.\n","In fact for G we use a modified (non-saturing) loss $-\\log D(G(z))$. Different modifications of the loss and the relation to the distance between distributions $p_{data}$ and $p_{G}$ became a topic of research over the last years.\n","\n"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"sWCfceup3acI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750988476737,"user_tz":420,"elapsed":10,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"eac96553-08e9-4c43-921b-f12fcd429b16"},"outputs":[{"output_type":"stream","name":"stdout","text":["Discriminator(\n","  (fc1): Linear(in_features=784, out_features=128, bias=True)\n","  (nonlin1): LeakyReLU(negative_slope=0.2)\n","  (fc2): Linear(in_features=128, out_features=1, bias=True)\n",")\n","Generator(\n","  (fc1): Linear(in_features=100, out_features=128, bias=True)\n","  (nonlin1): LeakyReLU(negative_slope=0.2)\n","  (fc2): Linear(in_features=128, out_features=784, bias=True)\n",")\n"]}],"source":["# Remember we have defined the discriminator and generator as:\n","D = Discriminator()\n","print(D)\n","G = Generator()\n","print(G)\n","# Now let's set up the optimizers\n","optimizerD = torch.optim.SGD(D.parameters(), lr=0.01)\n","optimizerG = torch.optim.SGD(G.parameters(), lr=0.01)"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"tGnk1f8D3acI","executionInfo":{"status":"ok","timestamp":1750988476740,"user_tz":420,"elapsed":1,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":["# and the BCE criterion which computes the loss above:\n","criterion = nn.BCELoss()"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"y_H-Ip9r3acI","executionInfo":{"status":"ok","timestamp":1750989556715,"user_tz":420,"elapsed":34,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":["# STEP 1: Discriminator optimization step\n","x_real, _ = next(iter(dataloader))  # 64 x 1 x 28 x 28\n","lab_real = torch.ones(64, 1)  # Labels for real images\n","lab_fake = torch.zeros(64, 1)  # Labels for fake images\n","# Reset accumulated gradients from previous iteration\n","optimizerD.zero_grad()\n","\n","D_x = D(x_real)  # Discriminator output for real images\n","lossD_real = criterion(D_x, lab_real)  # Loss for real images\n","\n","z = torch.randn(64, 100)  # Random noise, 64 samples, z_dim=100\n","x_gen = G(z).detach()  # Generate fake images, detach to avoid G gradients\n","D_G_z = D(x_gen)  # Discriminator output for fake images\n","lossD_fake = criterion(D_G_z, lab_fake)  # Loss for fake images\n","\n","lossD = lossD_real + lossD_fake  # Total Discriminator loss\n","lossD.backward()  # Compute gradients\n","optimizerD.step()  # Update Discriminator weights\n","\n","# print(D_x.mean().item(), D_G_z.mean().item())  # Optional: print mean probabilities"]},{"cell_type":"markdown","metadata":{"id":"IOT0arJ-3acJ"},"source":["Some things to think about / try out / investigate:\n","* what are the mean probabilities for real and fake? print them and see how they change when executing the cell above a couple of times. Does this correspond to your expectation?\n","* can you confirm how the use of the criterion maps to the objective stated above?\n","* when calling backward, the derivative of the loss wrt **what** gets computed?\n","* what does `.detach()` do? Are the Generator parameters' gradients computed?"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"z06iFv-S3acJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750990241777,"user_tz":420,"elapsed":31,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"c4be7455-ae93-4592-8324-118f5b85a5bb"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.4941708743572235\n"]}],"source":["# STEP 2: Generator optimization step\n","# note how only one of the terms involves the Generator so this is the only one that matters for G.\n","# reset accumulated gradients from previous iteration\n","optimizerG.zero_grad()\n","\n","z = torch.randn(64, 100) # random noise, 64 samples, z_dim=100\n","D_G_z = D(G(z))\n","lossG = criterion(D_G_z, lab_real) # -log D(G(z))\n","\n","lossG.backward()\n","optimizerG.step()\n","\n","print(D_G_z.mean().item())"]},{"cell_type":"markdown","metadata":{"id":"1TAxZzSk3acK"},"source":["Again run this cell a couple of times. See how the generator increases its Discriminator score?\n","\n","Some more things to ponder:\n","* Do the Generator parameters now receive gradients? Why (compared to previous loop)?\n","* From the definition of BCE loss confirm that this comes down to $-\\log D(G(z))$"]},{"cell_type":"markdown","metadata":{"id":"w1Y1mTjE3acK"},"source":["### Putting it all together: the full training loop\n","\n","Modifications to the code:\n","* add device parameter to take GPU if available\n","* use [Adam optimizer](https://pytorch.org/docs/stable/optim.html#torch.optim.Adam) (an adaptive learning-rate variation of SGD with momentum)\n","* some very minimal logging"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"t3RrVwCT3acL","colab":{"base_uri":"https://localhost:8080/","height":972},"executionInfo":{"status":"ok","timestamp":1750990872694,"user_tz":420,"elapsed":61443,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}},"outputId":"da29cb79-e470-4c2d-a070-85cdfa106a98"},"outputs":[{"output_type":"stream","name":"stdout","text":["Device: cpu\n","e0.i0/938 D(x)=0.5213 D(G(z))=0.5024\n","e0.i100/938 D(x)=0.8515 D(G(z))=0.5329\n","e0.i200/938 D(x)=0.8751 D(G(z))=0.3283\n","e0.i300/938 D(x)=0.8853 D(G(z))=0.2099\n","e0.i400/938 D(x)=0.8938 D(G(z))=0.2321\n","e0.i500/938 D(x)=0.8854 D(G(z))=0.2850\n","e0.i600/938 D(x)=0.8293 D(G(z))=0.3951\n","e0.i700/938 D(x)=0.8582 D(G(z))=0.2634\n","e0.i800/938 D(x)=0.8724 D(G(z))=0.3149\n","e0.i900/938 D(x)=0.9010 D(G(z))=0.2335\n","e1.i0/938 D(x)=0.8804 D(G(z))=0.2672\n","e1.i100/938 D(x)=0.8906 D(G(z))=0.1818\n","e1.i200/938 D(x)=0.8645 D(G(z))=0.2306\n","e1.i300/938 D(x)=0.8500 D(G(z))=0.3020\n","e1.i400/938 D(x)=0.8185 D(G(z))=0.2798\n","e1.i500/938 D(x)=0.8058 D(G(z))=0.2222\n","e1.i600/938 D(x)=0.8333 D(G(z))=0.1886\n","e1.i700/938 D(x)=0.8751 D(G(z))=0.2037\n","e1.i800/938 D(x)=0.8114 D(G(z))=0.2427\n","e1.i900/938 D(x)=0.7635 D(G(z))=0.2242\n","e2.i0/938 D(x)=0.6620 D(G(z))=0.4395\n","e2.i100/938 D(x)=0.6250 D(G(z))=0.4121\n","e2.i200/938 D(x)=0.7481 D(G(z))=0.2698\n","e2.i300/938 D(x)=0.7974 D(G(z))=0.1955\n","e2.i400/938 D(x)=0.7958 D(G(z))=0.1882\n","e2.i500/938 D(x)=0.8347 D(G(z))=0.1410\n","e2.i600/938 D(x)=0.8265 D(G(z))=0.1549\n","e2.i700/938 D(x)=0.9017 D(G(z))=0.1231\n","e2.i800/938 D(x)=0.8526 D(G(z))=0.1871\n","e2.i900/938 D(x)=0.7844 D(G(z))=0.1776\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import torch\n","import torch.nn as nn\n","import torchvision\n","from torchvision import transforms\n","import matplotlib.pyplot as plt\n","\n","# Define Discriminator and Generator (with fixed sigmoid bug)\n","class Discriminator(nn.Module):\n","    def __init__(self, inp_dim=784):\n","        super(Discriminator, self).__init__()\n","        self.fc1 = nn.Linear(inp_dim, 128)\n","        self.nonlin1 = nn.LeakyReLU(0.2)\n","        self.fc2 = nn.Linear(128, 1)\n","    def forward(self, x):\n","        x = x.view(x.size(0), 784)\n","        h = self.nonlin1(self.fc1(x))\n","        out = self.fc2(h)\n","        out = torch.sigmoid(out)  # Fixed: sigmoid(h), not sigmoid(out)\n","        return out\n","\n","class Generator(nn.Module):\n","    def __init__(self, z_dim=100):\n","        super(Generator, self).__init__()\n","        self.fc1 = nn.Linear(z_dim, 128)\n","        self.nonlin1 = nn.LeakyReLU(0.2)\n","        self.fc2 = nn.Linear(128, 784)\n","    def forward(self, x):\n","        h = self.nonlin1(self.fc1(x))\n","        out = self.fc2(h)\n","        out = torch.tanh(out)\n","        out = out.view(out.size(0), 1, 28, 28)\n","        return out\n","\n","# Setup device\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","print('Device:', device)\n","\n","# Initialize models and move to device\n","D = Discriminator().to(device)\n","G = Generator().to(device)\n","\n","# Optimizers (Adam for better GAN training)\n","optimizerD = torch.optim.Adam(D.parameters(), lr=0.0002)\n","optimizerG = torch.optim.Adam(G.parameters(), lr=0.0002)\n","\n","# Loss function\n","criterion = nn.BCELoss()\n","\n","# DataLoader\n","dataset = torchvision.datasets.FashionMNIST(\n","    root='./FashionMNIST/',\n","    transform=transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.5,), (0.5,))]),\n","    download=True\n",")\n","dataloader = torch.utils.data.DataLoader(dataset, batch_size=64, shuffle=True)\n","\n","# For logging\n","collect_x_gen = []\n","fixed_noise = torch.randn(64, 100, device=device)\n","fig = plt.figure()\n","plt.ion()\n","\n","# Visualization function\n","def show_imgs(images, new_fig=False):\n","    images = images.cpu().detach()  # Move to CPU, detach\n","    images = (images + 1) / 2  # Denormalize: [-1, 1] -> [0, 1]\n","    grid = torchvision.utils.make_grid(images[:16], nrow=4)\n","    plt.imshow(grid.permute(1, 2, 0).numpy(), cmap='gray')\n","    if new_fig:\n","        plt.figure()\n","\n","# Training loop\n","for epoch in range(3):\n","    for i, (x_real, _) in enumerate(dataloader, 0):\n","        # STEP 1: Discriminator optimization step\n","        x_real = x_real.to(device)\n","        batch_size = x_real.size(0)  # Handle variable batch size\n","        lab_real = torch.ones(batch_size, 1, device=device)  # Match batch size\n","        lab_fake = torch.zeros(batch_size, 1, device=device)  # Match batch size\n","        optimizerD.zero_grad()\n","\n","        D_x = D(x_real)  # Shape: (batch_size, 1)\n","        lossD_real = criterion(D_x, lab_real)\n","\n","        z = torch.randn(batch_size, 100, device=device)  # Match batch size\n","        x_gen = G(z).detach()\n","        D_G_z = D(x_gen)\n","        lossD_fake = criterion(D_G_z, lab_fake)\n","\n","        lossD = lossD_real + lossD_fake\n","        lossD.backward()\n","        optimizerD.step()\n","\n","        # STEP 2: Generator optimization step\n","        optimizerG.zero_grad()\n","\n","        z = torch.randn(batch_size, 100, device=device)  # Match batch size\n","        x_gen = G(z)\n","        D_G_z = D(x_gen)\n","        lossG = criterion(D_G_z, lab_real)\n","\n","        lossG.backward()\n","        optimizerG.step()\n","\n","        if i % 100 == 0:\n","            x_gen = G(fixed_noise)\n","            show_imgs(x_gen, new_fig=False)\n","            fig.canvas.draw()\n","            fig.canvas.flush_events()\n","            print(f'e{epoch}.i{i}/{len(dataloader)} D(x)={D_x.mean().item():.4f} D(G(z))={D_G_z.mean().item():.4f}')\n","\n","    # End of epoch\n","    x_gen = G(fixed_noise)\n","    collect_x_gen.append(x_gen.detach().clone())\n","\n","plt.ioff()\n","plt.show()"]},{"cell_type":"code","execution_count":39,"metadata":{"scrolled":false,"id":"WjpsDqZo3acM","executionInfo":{"status":"ok","timestamp":1750990884057,"user_tz":420,"elapsed":42,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":["for x_gen in collect_x_gen:\n","    show_imgs(x_gen)"]},{"cell_type":"markdown","metadata":{"id":"UmerZuAn3acM"},"source":["# A demo of a state of the art GAN and \"painting\" with them in your browser:\n","\n","https://gandissect.csail.mit.edu\n","\n","By our colleagues at the MIT-IBM Watson AI Lab.\n"]},{"cell_type":"markdown","metadata":{"id":"9qlinDwv3acN"},"source":["# Where to go from here\n","* Improvements to make on the current training loop: use `optim.Adam` instead of SGD, define bigger networks, add logging (check out tensorboardX) and monitor losses.\n","* Use a more exciting datasets - check out [the pytorch torchvision.datasets](https://pytorch.org/docs/stable/torchvision/datasets.html) to get started quickly.\n","* The [original GAN paper](https://papers.nips.cc/paper/5423-generative-adversarial-nets)\n","* The [DCGAN paper](https://arxiv.org/abs/1511.06434) which made it all work much better for images. Start from: pytorch DCGAN [example](https://github.com/pytorch/examples/blob/master/dcgan/main.py) and [tutorial](https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html)\n","* Newer generations of loss functions measure different distances between distributions $p_{data}$ and $p_G$. For example [WGAN](https://github.com/martinarjovsky/WassersteinGAN), [WGAN-GP](https://arxiv.org/abs/1704.00028), [Fisher GAN](https://arxiv.org/abs/1705.09675), [Sobolev GAN](https://arxiv.org/abs/1711.04894), many more. They often have better stability properties wrt the original GAN loss.\n","\n","# References for this tutorial\n","* pytorch DCGAN [example](https://github.com/pytorch/examples/blob/master/dcgan/main.py) and [tutorial](https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html) by Nathan Inkawhich\n","* [Medium blog post](https://medium.com/ai-society/gans-from-scratch-1-a-deep-introduction-with-code-in-pytorch-and-tensorflow-cb03cdcdba0f) by Diego Gomez Mosquera\n","* [Material made for ITDS course at CUNY](https://github.com/grantmlong/itds2019/blob/master/lecture-6/DL_lab_solutions.ipynb) by Tom Sercu (that's me!)\n","* [Blog post](https://towardsdatascience.com/graduating-in-gans-going-from-understanding-generative-adversarial-networks-to-running-your-own-39804c283399) by Cecelia Shao\n","* [GAN overview image](https://www.slideshare.net/xavigiro/deep-learning-for-computer-vision-generative-models-and-adversarial-training-upc-2016) from Xavier Giro"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hEnwAp8F3acN","executionInfo":{"status":"aborted","timestamp":1750988476754,"user_tz":420,"elapsed":27222,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eEbLnwVL3acN","executionInfo":{"status":"aborted","timestamp":1750988476755,"user_tz":420,"elapsed":27222,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dz5UteW03acO","executionInfo":{"status":"aborted","timestamp":1750988476757,"user_tz":420,"elapsed":27224,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HJog1HK1nRf7","executionInfo":{"status":"aborted","timestamp":1750988476758,"user_tz":420,"elapsed":27225,"user":{"displayName":"Taylor Sparks","userId":"05787719851827837091"}}},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/tomsercu/gan-tutorial-pytorch/blob/master/2019-04-23%20GAN%20Tutorial.ipynb","timestamp":1750988227980}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.6"}},"nbformat":4,"nbformat_minor":0}